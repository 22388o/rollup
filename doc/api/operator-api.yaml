openapi: 3.0.1
info:
  title: RollUp operators
  description: 'Documentation for the RollUp operators API'

# TODO SERVER:
  # - input validation
  # - return errors e.g: 500 status code with nice messages ==> fix oneOf... , change it to multiple responses (one for potential status code)
  # - security: add authentication && authorization ==> add to the API doc


  
# TODO: CHANGE THIS FOR OUR OWN TOS
#  termsOfService: http://swagger.io/terms/
  
# TODO: CHANGE THIS FOR OUR OWN CONTACT EMAIL
#  contact:
#    email: apiteam@swagger.io
    
# TODO: CHANGE THIS FOR OUR OWN LICENSE
#  license:
#    name: Apache 2.0
#    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
  
# OPTIONAL:
#externalDocs:
#  description: Find out more about Swagger
#  url: http://swagger.io

# TODO: Â¿USE A REFERENCE SERVER OF OUR OWN?
# servers:
# - url: https://petstore.swagger.io/v2
# - url: http://petstore.swagger.io/v2

paths:
  /info/{id}:
    get:
      tags:
      - API Rollup Synch
      summary: Get info of a leaf of the tree by it's id.
      description: Returns a single leaf of the tree
      parameters:
      - name: id
        in: path
        description: ID of the leaf to return
        required: true
        schema:
          $ref: '#/components/schemas/bigInt'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/leaf'
                - $ref: '#/components/schemas/error'
  
  /info/{Ax}/{Ay}:              
    get:
      tags:
      - API Rollup Synch
      summary: Get info of a leaf of the tree by Ax and Ay.
      description: Returns multiple leafs of the tree
      parameters:
      - name: Ax
        in: path
        # TODO: DESCRIPTION OF Ax
        description: ID of the leaf to return
        required: true
        schema:
          $ref: '#/components/schemas/bigInt'
      - name: Ay
        in: path
        # TODO: DESCRIPTION OF Ay
        description: ID of the leaf to return
        required: true
        schema:
          $ref: '#/components/schemas/bigInt'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/leafs'
                - $ref: '#/components/schemas/error'

  /info/{ethaddress}:              
    get:
      tags:
      - API Rollup Synch
      summary: Get info of the tree by etherum address
      description: Returns all the tree leafs associated to the given etherum address
      parameters:
      - name: ethaddress
        in: path
        # TODO: DESCRIPTION OF Ax
        description: Etherum address
        required: true
        schema:
          $ref: '#/components/schemas/bigInt'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/leafs'
                - $ref: '#/components/schemas/error'

  /state:              
    get:
      tags:
      - API Rollup Synch
      summary: Get state of the rollup
      description: Returns all the leafs of the tree
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/leafs'
                - $ref: '#/components/schemas/error'

  /offchain/send:
    post:
      tags:
      - API Pool off-chain Tx
      summary: send a transaction off-chain
      # TODO: extended description
      description: send a transaction off-chain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transaction'
      responses:
        200:
          description: successful operation
        
  /register/{stake}:
    post:
      tags:
      - API ADMIN
      summary: Add stake to the operator
      description: Increase the ammount of stake deposited in the operator in order to increase the chences of being elected to mine a slot.
      parameters:
      - name: stake
        in: path
        description: Ammount of ether to be staked
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Successful operation
          content: {}
        500:
          description: Error message
          content:
          # TODO: NOT SURE OF CONTENT TYPE text, CHECK WITH REAL API
            text:
              schema:
                  type: string
                  example: Register cannot be done
  
  /unregister:      
    post:
      tags:
      - API ADMIN
      summary: Stop opoerating
      description: Unregister the operator of the list of active rollup operators. This will produce a transaction on-chain.
      responses:
        200:
          description: successful operation
          content: {}
  
  /withdraw:
    post:
      tags:
      - API ADMIN
      summary: Stop opoerating
      description: Unregister the operator of the list of active rollup operators. This will produce a transaction on-chain.
      responses:
        200:
          description: successful operation
          content: {}    
          
components:
  schemas:
    bigInt:
      type: string
      # TODO: FIX REGEX ESPRESSION!!!!
      pattern: '^\d{3}-\d{2}-\d{4}$'
      example: "0x63F6B50a2cbAbA54Ec6426065223B652b8b39133"
    error:
      type: string
      nullable: true
    leaf:
      type: object
      properties:
      # TODO: COMPLETE STATE PROPERTIES
        id:
          $ref: '#/components/schemas/bigInt'
    leafs:
      type: array
      items:
        $ref: '#/components/schemas/leaf'
    transaction:
      type: object
      properties:
      # TODO: COMPLETE TRANSACTION PROPERTIES
        foo:
          $ref: '#/components/schemas/bigInt'

