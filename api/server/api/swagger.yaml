openapi: 3.0.1
info:
  title: Rollup
  description: API design to be implemented by the operators and potentially other
    service providers such as block explorers and wallets. Ideally this reference
    will be implemented by the different components of a operator.
  version: 0.0.1
servers:
- url: http://localhost:8080
  description: Local development server
paths:
  /stats:
    get:
      tags:
      - Explorer
      summary: Get general metrics of the rollup.
      description: Returns various statistics that refelct the state of the rollup
      operationId: getStats
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rollupStats'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
        501:
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_501'
      x-swagger-router-controller: Explorer
  /transaction/{id}:
    get:
      tags:
      - Explorer
      summary: Get a specific transaction.
      description: Returns the transaction identified by id.
      operationId: getTransactionById
      parameters:
      - name: id
        in: path
        description: ID of the transaction to return
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/transactionId'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
        501:
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_501'
      x-swagger-router-controller: Explorer
  /transactions:
    get:
      tags:
      - Explorer
      summary: Query for transactions.
      description: Returns an array of transactions based on the query parameters.
        If no parameter are porvided, this endpoint will return the most recent transactions.
      operationId: getTransactions
      parameters:
      - name: address
        in: query
        description: If this parameter is porvided, all the returned transactions
          will have this value as sender or receiver.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/bigInt'
      - name: from
        in: query
        description: If this parameter is porvided, all the returned transactions
          will have this value as sender.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/bigInt'
      - name: to
        in: query
        description: If this parameter is porvided, all the returned transactions
          will have this value as receiver.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/bigInt'
      - name: block
        in: query
        description: If this parameter is porvided, all the returned transactions
          will have this value as block id.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/bigInt'
      - name: fromId
        in: query
        description: If this parameter is porvided, all the returned transactions
          will be previous to the the transaction identified by the provided value.
          Use to retrieve older transactions that were not included in a query, as
          in pagination.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/bigInt'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactions'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
        501:
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_501'
      x-swagger-router-controller: Explorer
  /batch/{id}:
    get:
      tags:
      - Explorer
      summary: Get a specific batch.
      description: Returns the batch identified by id.
      operationId: getBatchById
      parameters:
      - name: id
        in: path
        description: ID of the transaction to return
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/batchId'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/batch'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
        501:
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_501'
      x-swagger-router-controller: Explorer
  /slot/{id}:
    get:
      tags:
      - Explorer
      summary: Get a specific slot.
      description: Returns the slot identified by id.
      operationId: getSlotById
      parameters:
      - name: id
        in: path
        description: ID of the slot to return
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/slotId'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/slot'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
        501:
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_501'
      x-swagger-router-controller: Explorer
  /era/{id}:
    get:
      tags:
      - Explorer
      summary: Get a specific era.
      description: Returns the era identified by id.
      operationId: getEraById
      parameters:
      - name: id
        in: path
        description: ID of the era to return
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/eraId'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/era'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
        501:
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_501'
      x-swagger-router-controller: Explorer
  /operator/{id}:
    get:
      tags:
      - Explorer
      summary: Get an operator information.
      description: Return an operator that matches the id.
      operationId: getOperatorById
      parameters:
      - name: id
        in: path
        description: ID of the operator to return
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/operatorId'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/operator'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
        501:
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_501'
      x-swagger-router-controller: Explorer
  /operator/list:
    get:
      tags:
      - Explorer
      summary: Get all the operators id's.
      description: Returns an array of all the registered operator id's
      operationId: getOperatorList
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/operatorIds'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
        501:
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_501'
      x-swagger-router-controller: Explorer
  /operator/stats:
    get:
      tags:
      - Explorer
      summary: Get all the operators id's.
      description: Returns an array of all the registered operator id's
      operationId: getOperatorStats
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/operatorStats'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
        501:
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_501'
      x-swagger-router-controller: Explorer
components:
  schemas:
    bigInt:
      pattern: ^0x[a-fA-F0-9]{40}$
      type: string
      example: 0x63F6B50a2cbAbA54Ec6426065223B652b8b39133
    transactionId:
      description: Id of a transaction
      example: 0x7776B50a2cbAbA54Ec6426065223B652b8b39122
      allOf:
      - $ref: '#/components/schemas/bigInt'
    batchId:
      description: Id of a batch
      example: 0x8886B50a2cbAbA54Ec6426065223B652b8b39122
      allOf:
      - $ref: '#/components/schemas/bigInt'
    slotId:
      description: Id of a slot
      example: 0x9996B50a2cbAbA54Ec6426065223B652b8b39122
      allOf:
      - $ref: '#/components/schemas/bigInt'
    eraId:
      description: Id of a transaction
      example: 0x6666B50a2cbAbA54Ec6426065223B652b8b39122
      allOf:
      - $ref: '#/components/schemas/bigInt'
    transaction:
      required:
      - ammount
      - fee
      - from
      - to
      - tokenId
      type: object
      properties:
        id:
          description: Identifier of the transaction
          allOf:
          - $ref: '#/components/schemas/bigInt'
        from:
          description: Address of the sender
          allOf:
          - $ref: '#/components/schemas/bigInt'
        to:
          description: Address of the receiver
          allOf:
          - $ref: '#/components/schemas/bigInt'
        tokenId:
          description: Id of the token that will be sent
          allOf:
          - $ref: '#/components/schemas/bigInt'
        ammount:
          minimum: 0
          type: number
          description: Amount of tokens of type tokenId to be transacted
          example: 123
        fee:
          minimum: 0
          type: number
          description: Amount of tokens to be payed to the operator as reward for
            including the transaction in a mined batch.
          example: 2
      description: Off chain transaction, specific ammount of tokens (to be) transfered
        from one address to another.
      example:
        id: 0xAAA6B50a2cbAbA54Ec6426065223B652b8b39133
        from: 0xBBB6B50a2cbAbA54Ec6426065223B652b8b39133
        to: 0xCCC6B50a2cbAbA54Ec6426065223B652b8b39133
        tokenId: 0xDDD6B50a2cbAbA54Ec6426065223B652b8b39133
        ammount: 133
        fee: 2
    transactions:
      type: array
      description: Array of transactions
      items:
        $ref: '#/components/schemas/transaction'
    operatorId:
      description: Id of an operator
      example: 0x44F6B50a2cbAbA54Ec6426065223B652b8b39122
      allOf:
      - $ref: '#/components/schemas/bigInt'
    operator:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/operatorId'
        endpoint:
          pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(((([A-Za-z]{3,9}:(?:\/\/)?)(?:[\-;:&=\+\$,\w]+@)?[A-Za-z0-9\.\-]+|(?:www\.|[\-;:&=\+\$,\w]+@)[A-Za-z0-9\.\-]+)((?:\/[\+~%\/\.\w\-_]*)?\??(?:[\-\+=&;%@\.\w_]*)#?(?:[\.\!\/\\\w]*))?))$
          type: string
          description: HTTP endpoint that holds the operator API
        stake:
          minimum: 0
          type: number
          description: Amount of Ether deposited by the operator in order to be electable
            for mining slots.
        activeSince:
          type: string
          description: The moment the operator became available
          format: date-time
        avgUptime:
          maximum: 1
          minimum: 0
          type: number
          description: Average uptime of this operator, expressed in percentage (0..1).
        minedTransactions:
          minimum: 0
          type: number
          description: Amount of transactions mined into batches by this operator.
        minedBatches:
          minimum: 0
          type: number
          description: Amount of batches mined this operator.
        batchRatio:
          maximum: 1
          minimum: 0
          type: number
          description: Ratio of mined batches, mined batches / batches in which the
            operator was electable for mining.
      description: Service porvider, it receives transactions and mine them into the
        rollup. The rollup works using a Proof of Stake, so the operator will have
        to deposit Ether in order to be chosen.
      example:
        id: 0x55F6B50a2cbAbA54Ec6426065223B652b8b39111
        endpoint: http://operator.iden3.io
        stake: 649
        activeSince: 2019-10-11T14:04:01.067Z
        avgUptime: 0.9856
        minedTransactions: 35497
        minedBatches: 35497
        batchRatio: 0.9857
    operatorIds:
      type: array
      items:
        $ref: '#/components/schemas/operatorId'
    operatorStats:
      required:
      - avgFee
      - avgUptime
      - stake
      - totalFee
      type: object
      properties:
        avgFee:
          minimum: 0
          type: number
          description: Average fee payed to the operators for the transactions.
        totalFee:
          minimum: 0
          type: number
          description: Total fee payed to the operators for all the transactions.
        totalStake:
          minimum: 0
          type: number
          description: Total amount of Ether deposited by the currently active operators
            in order to be electable for mining slots.
        avgUptime:
          maximum: 1
          minimum: 0
          type: number
          description: Average uptime of the currently registered operators, expressed
            in percentage (0..1).
      description: Set of aggregated metrics from the active operators in the rollup
      example:
        avgFee: 3.6E-5
        totalFee: 85672.897634
        totalStake: 6349.387
        avgUptime: 0.9856
    batch:
      required:
      - eraId
      - id
      - operatorId
      - slotId
      - transactions
      type: object
      properties:
        id:
          description: Id of the batch
          allOf:
          - $ref: '#/components/schemas/bigInt'
        operatorId:
          description: Id of the operator that mined / will mine the batch
          example: 0x1111150a2cbAbA54Ec6426065223B652b8b39133
          allOf:
          - $ref: '#/components/schemas/bigInt'
        transactions:
          description: List of transactions mined on the batch
          allOf:
          - $ref: '#/components/schemas/transactions'
        slotId:
          description: Id of the slot where this batch is included
          allOf:
          - $ref: '#/components/schemas/bigInt'
        eraId:
          description: Id of the era where this batch is included
          allOf:
          - $ref: '#/components/schemas/bigInt'
      description: Mining units of the rollup, a batch encapsulate a limited ammount
        of transactions. Think of it as the blocks of a blockchain.
      example:
        id: 0x0000050a2cbAbA54Ec6426065223B652b8b39133
        operatorId: 0x0000000000bAbA54Ec6426065223B652b8b39133
        transactions:
        - id: 0x1116B50a2cbAbA54Ec6426065223B652b8b39133
          from: 0xaAa6B50a2cbAbA54Ec6426065223B652b8b39133
          to: 0xbBb6B50a2cbAbA54Ec6426065223B652b8b39133
          tokenId: 0xcCc6B50a2cbAbA54Ec6426065223B652b8b39133
          ammount: 133
          fee: 2
        slotId: 0x5556B50a2cbAbA54Ec6426065223B652b8b39133
        eraId: 0x6666B50a2cbAbA54Ec6426065223B652b8b39133
    slot:
      required:
      - batches
      - eraId
      - id
      type: object
      properties:
        id:
          description: Id of the slot
          allOf:
          - $ref: '#/components/schemas/bigInt'
        batches:
          type: array
          description: batches mined in this slot
          items:
            $ref: '#/components/schemas/batch'
        eraId:
          description: Id of the era where this slot is included
          allOf:
          - $ref: '#/components/schemas/bigInt'
      description: Set of consecutive batches mined by a single operator. Slots are
        preasigned to operators. In a single slot the operator can add as many batches
        as wished. However if the asigned operator doesn't mine any block, it will
        be penalized.
      example:
        id: 0x5556B50a2cbAbA54Ec6426065223B652b8b39133
        batches:
        - id: 0x0000050a2cbAbA54Ec6426065223B652b8b39133
          operatorId: 0x0000000000bAbA54Ec6426065223B652b8b39133
          transactions:
          - id: 0x1116B50a2cbAbA54Ec6426065223B652b8b39133
            from: 0xaAa6B50a2cbAbA54Ec6426065223B652b8b39133
            to: 0xbBb6B50a2cbAbA54Ec6426065223B652b8b39133
            tokenId: 0xcCc6B50a2cbAbA54Ec6426065223B652b8b39133
            ammount: 133
            fee: 2
          slotId: 0x5556B50a2cbAbA54Ec6426065223B652b8b39133
          eraId: 0x6666B50a2cbAbA54Ec6426065223B652b8b39133
        eraId: 0x6666B50a2cbAbA54Ec6426065223B652b8b39133
    era:
      required:
      - id
      - slots
      type: object
      properties:
        id:
          description: Id of the era
          allOf:
          - $ref: '#/components/schemas/bigInt'
        slots:
          type: array
          description: batches that form part of this era
          items:
            $ref: '#/components/schemas/slot'
      description: Set of consecutive slots.
      example:
        id: 0x6666B50a2cbAbA54Ec6426065223B652b8b39133
        slots:
        - id: 0x5556B50a2cbAbA54Ec6426065223B652b8b39133
          batches:
          - id: 0x0000050a2cbAbA54Ec6426065223B652b8b39133
            operatorId: 0x0000000000bAbA54Ec6426065223B652b8b39133
            transactions:
            - id: 0x1116B50a2cbAbA54Ec6426065223B652b8b39133
              from: 0xaAa6B50a2cbAbA54Ec6426065223B652b8b39133
              to: 0xbBb6B50a2cbAbA54Ec6426065223B652b8b39133
              tokenId: 0xcCc6B50a2cbAbA54Ec6426065223B652b8b39133
              ammount: 133
              fee: 2
            slotId: 0x5556B50a2cbAbA54Ec6426065223B652b8b39133
            eraId: 0x6666B50a2cbAbA54Ec6426065223B652b8b39133
          eraId: 0x6666B50a2cbAbA54Ec6426065223B652b8b39133
    rollupStats:
      required:
      - activeSince
      - avgFee
      - avgUptime
      - stake
      - totalFee
      - totalUptime
      type: object
      properties:
        currentEra:
          description: Active era, the era where the current slot is included and
            the next batches will be mined into.
          allOf:
          - $ref: '#/components/schemas/era'
        scheduledSlots:
          type: array
          description: Future slots that already have an asigned operator
          items:
            $ref: '#/components/schemas/slot'
        totalOperators:
          minimum: 0
          type: integer
          description: Number of active operators in the rollup.
          example: 23
        stake:
          minimum: 0
          type: number
          description: Total ammount of Ether deposited by the operators.
          example: 756349.8734
        totalTransactions:
          minimum: 0
          type: integer
          description: Total ammount of transactions occured in the rollup.
          example: 908757
        activeSince:
          type: string
          description: The moment the rollup became available
          format: date-time
      example:
        currentEra:
          id: 0x6666B50a2cbAbA54Ec6426065223B652b8b39133
          slots:
          - id: 0x5556B50a2cbAbA54Ec6426065223B652b8b39133
            batches:
            - id: 0x0000050a2cbAbA54Ec6426065223B652b8b39133
              operatorId: 0x0000000000bAbA54Ec6426065223B652b8b39133
              transactions:
              - id: 0x1116B50a2cbAbA54Ec6426065223B652b8b39133
                from: 0xaAa6B50a2cbAbA54Ec6426065223B652b8b39133
                to: 0xbBb6B50a2cbAbA54Ec6426065223B652b8b39133
                tokenId: 0xcCc6B50a2cbAbA54Ec6426065223B652b8b39133
                ammount: 133
                fee: 2
              slotId: 0x5556B50a2cbAbA54Ec6426065223B652b8b39133
              eraId: 0x6666B50a2cbAbA54Ec6426065223B652b8b39133
            eraId: 0x6666B50a2cbAbA54Ec6426065223B652b8b39133
        scheduledSlots:
        - id: 0x5556B50a2cbAbA54Ec6426065223B652b8b39134
          batches:
          - id: 0x0000050a2cbAbA54Ec6426065223B652b8b39133
            operatorId: 0x0000000000bAbA54Ec6426065223B652b8b39133
            transactions: []
            slotId: 0x5556B50a2cbAbA54Ec6426065223B652b8b39134
            eraId: 0x6666B50a2cbAbA54Ec6426065223B652b8b39133
          eraId: 0x6666B50a2cbAbA54Ec6426065223B652b8b39133
        totalOperators: 23
        stake: 756349.8734
        totalTransactions: 908757
        activeSince: 2019-10-11T14:45:21.500Z
    inline_response_401:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
          example: INPUT_VALIDATION_ERROR
        message:
          type: string
          example: Incorrect value for \"id\" at paths,/transaction/{id},get,parameters,0,schema.
    inline_response_500:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
          example: UNKNOWN_ERROR
        message:
          type: string
          example: This is emabarrasing, something went wrong while processing your
            request. Try again later, if the rror persist please contact support.
    inline_response_501:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
          example: FEATURE_NOT_IMPLEMENTED_YET
        message:
          type: string
          example: This feature is not fully implemented yet. You can use the mockup
            data provided in this response but keep in mind that the values are reandomly
            generated.
        mockup:
          type: object
          example:
            thisObject: Sould be equal to the 200 response object
  responses:
    Error:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_500'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_401'
    NotImplemented:
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_501'
